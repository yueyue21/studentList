{"ast":null,"code":"import { DELETE_STUDENT, EDIT_STUDENT, GET_STUDENT, GET_STUDENTS } from \"./types\";\nimport history from \"../history\";\nimport axios from \"axios\";\nconst baseUrl = \"http://localhost:3001\";\nexport const addStudent = formValues => async dispatch => {\n  const response = await axios.post(\"\".concat(baseUrl, \"/students\"), formValues); //we do not need to update the state by dispatching an action since\n  //after visit \"/\" the state will go with the getStudents action creator\n  //which will update the state from the api\n\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\nexport const getStudents = () => async dispatch => {\n  const response = await axios.get(\"\".concat(baseUrl, \"/students\")); // console.log(response);\n\n  dispatch({\n    type: GET_STUDENTS,\n    payload: response.data\n  });\n};\nexport const getStudent = id => async dispatch => {\n  const response = await axios.get(\"\".concat(baseUrl, \"/students/\").concat(id)); // console.log(response);\n\n  dispatch({\n    type: GET_STUDENT,\n    payload: response.data\n  });\n};\nexport const editStudent = (id, formValues) => async dispatch => {\n  const response = await axios.put(\"\".concat(baseUrl, \"/students/\").concat(id), formValues); //console.log(response);\n\n  dispatch({\n    type: EDIT_STUDENT,\n    payload: response.data\n  });\n\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\nexport const deleteStudent = id => async dispatch => {\n  await axios.delete(\"\".concat(baseUrl, \"/students/\").concat(id)); //console.log(response);\n\n  dispatch({\n    type: DELETE_STUDENT,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/yueyin/Desktop/learning/full_stack_development/studentList/client/src/actions/index.js"],"names":["DELETE_STUDENT","EDIT_STUDENT","GET_STUDENT","GET_STUDENTS","history","axios","baseUrl","addStudent","formValues","dispatch","response","post","data","push","console","log","getStudents","get","type","payload","getStudent","id","editStudent","put","deleteStudent","delete"],"mappings":"AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,QAKO,SALP;AAMA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACxD,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,WAAcL,OAAd,gBAAkCE,UAAlC,CAAvB,CADwD,CAExD;AACA;AACA;;AACA,MAAIE,QAAQ,CAACE,IAAb,EAAmB;AACjBR,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMM,WAAW,GAAG,MAAM,MAAMP,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAN,WAAaX,OAAb,eAAvB,CADiD,CAEjD;;AACAG,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEf,YAAR;AAAsBgB,IAAAA,OAAO,EAAET,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAKP,OAAO,MAAMQ,UAAU,GAAGC,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAN,WAAaX,OAAb,uBAAiCe,EAAjC,EAAvB,CADgD,CAEhD;;AACAZ,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,IAAAA,OAAO,EAAET,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMU,WAAW,GAAG,CAACD,EAAD,EAAKb,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC/D,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACkB,GAAN,WAAajB,OAAb,uBAAiCe,EAAjC,GAAuCb,UAAvC,CAAvB,CAD+D,CAE/D;;AACAC,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEjB,YAAR;AAAsBkB,IAAAA,OAAO,EAAET,QAAQ,CAACE;AAAxC,GAAD,CAAR;;AACA,MAAIF,QAAQ,CAACE,IAAb,EAAmB;AACjBR,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD;AACF,CATM;AAWP,OAAO,MAAMc,aAAa,GAAGH,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AACnD,QAAMJ,KAAK,CAACoB,MAAN,WAAgBnB,OAAhB,uBAAoCe,EAApC,EAAN,CADmD,CAEnD;;AACAZ,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAElB,cAAR;AAAwBmB,IAAAA,OAAO,EAAEE;AAAjC,GAAD,CAAR;AACAjB,EAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,CALM","sourcesContent":["import {\n  DELETE_STUDENT,\n  EDIT_STUDENT,\n  GET_STUDENT,\n  GET_STUDENTS\n} from \"./types\";\nimport history from \"../history\";\nimport axios from \"axios\";\nconst baseUrl = \"http://localhost:3001\";\n\nexport const addStudent = formValues => async dispatch => {\n  const response = await axios.post(`${baseUrl}/students`, formValues);\n  //we do not need to update the state by dispatching an action since\n  //after visit \"/\" the state will go with the getStudents action creator\n  //which will update the state from the api\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\n\nexport const getStudents = () => async dispatch => {\n  const response = await axios.get(`${baseUrl}/students`);\n  // console.log(response);\n  dispatch({ type: GET_STUDENTS, payload: response.data });\n};\nexport const getStudent = id => async dispatch => {\n  const response = await axios.get(`${baseUrl}/students/${id}`);\n  // console.log(response);\n  dispatch({ type: GET_STUDENT, payload: response.data });\n};\n\nexport const editStudent = (id, formValues) => async dispatch => {\n  const response = await axios.put(`${baseUrl}/students/${id}`, formValues);\n  //console.log(response);\n  dispatch({ type: EDIT_STUDENT, payload: response.data });\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\n\nexport const deleteStudent = id => async dispatch => {\n  await axios.delete(`${baseUrl}/students/${id}`);\n  //console.log(response);\n  dispatch({ type: DELETE_STUDENT, payload: id });\n  history.push(\"/\");\n};\n"]},"metadata":{},"sourceType":"module"}