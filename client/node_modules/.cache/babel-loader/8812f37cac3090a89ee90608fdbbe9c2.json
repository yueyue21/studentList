{"ast":null,"code":"import { ADD_STUDENT, DELETE_STUDENT, EDIT_STUDENT, GET_STUDENT, GET_STUDENTS } from \"./types\";\nimport history from \"../history\";\nimport axios from \"axios\";\nconst baseUrl = \"http://localhost:3001\";\nexport const addStudent = formValues => async dispatch => {\n  const response = await axios.post(\"\".concat(baseUrl, \"/students\"), formValues); //It seems we do not need to update the state by dispatching an action since\n  //after visit \"/\" the state will go with the getStudents action creator\n  //which will update the state from the api.\n  //But!!! the actuall key fetched from the api will be treated as a duplicated key\n  // state propery. Please update by dispatch\n  //To be investigated..............\n\n  dispatch({\n    type: ADD_STUDENT,\n    payload: response.data\n  });\n\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\nexport const getStudents = () => async dispatch => {\n  const response = await axios.get(\"\".concat(baseUrl, \"/students\")); // console.log(response);\n\n  dispatch({\n    type: GET_STUDENTS,\n    payload: response.data\n  });\n};\nexport const getStudent = id => async dispatch => {\n  const response = await axios.get(\"\".concat(baseUrl, \"/students/\").concat(id)); // console.log(response);\n\n  dispatch({\n    type: GET_STUDENT,\n    payload: response.data\n  });\n};\nexport const editStudent = (id, formValues) => async dispatch => {\n  const response = await axios.put(\"\".concat(baseUrl, \"/students/\").concat(id), formValues); //console.log(response);\n\n  dispatch({\n    type: EDIT_STUDENT,\n    payload: response.data\n  });\n\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\nexport const deleteStudent = id => async dispatch => {\n  await axios.delete(\"\".concat(baseUrl, \"/students/\").concat(id)); //console.log(response);\n\n  dispatch({\n    type: DELETE_STUDENT,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/yueyin/Desktop/studentList/client/src/actions/index.js"],"names":["ADD_STUDENT","DELETE_STUDENT","EDIT_STUDENT","GET_STUDENT","GET_STUDENTS","history","axios","baseUrl","addStudent","formValues","dispatch","response","post","type","payload","data","push","console","log","getStudents","get","getStudent","id","editStudent","put","deleteStudent","delete"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,SANP;AAOA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACxD,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,WAAcL,OAAd,gBAAkCE,UAAlC,CAAvB,CADwD,CAExD;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEb,WAAR;AAAqBc,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAvC,GAAD,CAAR;;AACA,MAAIJ,QAAQ,CAACI,IAAb,EAAmB;AACjBV,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD;AACF,CAdM;AAgBP,OAAO,MAAMQ,WAAW,GAAG,MAAM,MAAMT,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACc,GAAN,WAAab,OAAb,eAAvB,CADiD,CAEjD;;AACAG,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAET,YAAR;AAAsBU,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACD,CAJM;AAKP,OAAO,MAAMM,UAAU,GAAGC,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACc,GAAN,WAAab,OAAb,uBAAiCe,EAAjC,EAAvB,CADgD,CAEhD;;AACAZ,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,WAAR;AAAqBW,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAvC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMQ,WAAW,GAAG,CAACD,EAAD,EAAKb,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC/D,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACkB,GAAN,WAAajB,OAAb,uBAAiCe,EAAjC,GAAuCb,UAAvC,CAAvB,CAD+D,CAE/D;;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX,YAAR;AAAsBY,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;;AACA,MAAIJ,QAAQ,CAACI,IAAb,EAAmB;AACjBV,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD;AACF,CATM;AAWP,OAAO,MAAMc,aAAa,GAAGH,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AACnD,QAAMJ,KAAK,CAACoB,MAAN,WAAgBnB,OAAhB,uBAAoCe,EAApC,EAAN,CADmD,CAEnD;;AACAZ,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEZ,cAAR;AAAwBa,IAAAA,OAAO,EAAEQ;AAAjC,GAAD,CAAR;AACAjB,EAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,CALM","sourcesContent":["import {\n  ADD_STUDENT,\n  DELETE_STUDENT,\n  EDIT_STUDENT,\n  GET_STUDENT,\n  GET_STUDENTS\n} from \"./types\";\nimport history from \"../history\";\nimport axios from \"axios\";\nconst baseUrl = \"http://localhost:3001\";\n\nexport const addStudent = formValues => async dispatch => {\n  const response = await axios.post(`${baseUrl}/students`, formValues);\n  //It seems we do not need to update the state by dispatching an action since\n  //after visit \"/\" the state will go with the getStudents action creator\n  //which will update the state from the api.\n  //But!!! the actuall key fetched from the api will be treated as a duplicated key\n  // state propery. Please update by dispatch\n  //To be investigated..............\n  dispatch({ type: ADD_STUDENT, payload: response.data });\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\n\nexport const getStudents = () => async dispatch => {\n  const response = await axios.get(`${baseUrl}/students`);\n  // console.log(response);\n  dispatch({ type: GET_STUDENTS, payload: response.data });\n};\nexport const getStudent = id => async dispatch => {\n  const response = await axios.get(`${baseUrl}/students/${id}`);\n  // console.log(response);\n  dispatch({ type: GET_STUDENT, payload: response.data });\n};\n\nexport const editStudent = (id, formValues) => async dispatch => {\n  const response = await axios.put(`${baseUrl}/students/${id}`, formValues);\n  //console.log(response);\n  dispatch({ type: EDIT_STUDENT, payload: response.data });\n  if (response.data) {\n    history.push(\"/\");\n  } else {\n    console.log(response);\n  }\n};\n\nexport const deleteStudent = id => async dispatch => {\n  await axios.delete(`${baseUrl}/students/${id}`);\n  //console.log(response);\n  dispatch({ type: DELETE_STUDENT, payload: id });\n  history.push(\"/\");\n};\n"]},"metadata":{},"sourceType":"module"}